# coding: utf-8

"""
    GRAX API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from grax.models.searches_page import SearchesPage

class TestSearchesPage(unittest.TestCase):
    """SearchesPage unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchesPage:
        """Test SearchesPage
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchesPage`
        """
        model = SearchesPage()
        if include_optional:
            return SearchesPage(
                next_page_token = '',
                searches = [
                    grax.models.search.Search(
                        created = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        deleting = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        filter_status = '', 
                        filters = grax.models.search_filters.SearchFilters(
                            children = [
                                grax.models.search_filters.SearchFilters(
                                    fields = [
                                        grax.models.search_field_filter.SearchFieldFilter(
                                            field = '', 
                                            filter_type = '', 
                                            not = True, 
                                            value = '', )
                                        ], 
                                    mode = 'and', )
                                ], 
                            fields = [
                                grax.models.search_field_filter.SearchFieldFilter(
                                    field = '', 
                                    filter_type = '', 
                                    not = True, 
                                    value = '', )
                                ], 
                            mode = 'and', ), 
                        id = '', 
                        limits = grax.models.search_limits.SearchLimits(
                            results = 56, ), 
                        name = '', 
                        object = '', 
                        progress = 1.337, 
                        records_found = 56, 
                        records_scanned = 56, 
                        records_time_first = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        records_time_last = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        reverse = True, 
                        status = '', 
                        time_field = '', 
                        time_field_max = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        time_field_min = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        updated = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ]
            )
        else:
            return SearchesPage(
        )
        """

    def testSearchesPage(self):
        """Test SearchesPage"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
