# coding: utf-8

"""
    GRAX API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from grax.models.search_create import SearchCreate

class TestSearchCreate(unittest.TestCase):
    """SearchCreate unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SearchCreate:
        """Test SearchCreate
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SearchCreate`
        """
        model = SearchCreate()
        if include_optional:
            return SearchCreate(
                filters = grax.models.search_filters.SearchFilters(
                    children = [
                        grax.models.search_filters.SearchFilters(
                            fields = [
                                grax.models.search_field_filter.SearchFieldFilter(
                                    field = '', 
                                    filter_type = '', 
                                    not = True, 
                                    value = '', )
                                ], 
                            mode = 'and', )
                        ], 
                    fields = [
                        grax.models.search_field_filter.SearchFieldFilter(
                            field = '', 
                            filter_type = '', 
                            not = True, 
                            value = '', )
                        ], 
                    mode = 'and', ),
                limits = grax.models.search_limits.SearchLimits(
                    results = 56, ),
                notify = True,
                object = '',
                reverse = True,
                status = '',
                time_field = '',
                time_field_max = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                time_field_min = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return SearchCreate(
        )
        """

    def testSearchCreate(self):
        """Test SearchCreate"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
